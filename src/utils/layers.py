from torch import nn

class DepthwiseSeparableConv2d(nn.Module):
    def __init__(self, cin, cout, kernel_size=3, padding=1, bias=True):
        super(DepthwiseSeparableConv2d, self).__init__()
        self.depthwise = nn.Conv2d(cin, cin, kernel_size=kernel_size, padding=padding, groups=cin, bias=bias)
        self.pointwise = nn.Conv2d(cin, cout, kernel_size=1, bias=bias)

    def forward(self, x):
        out = self.depthwise(x)
        out = self.pointwise(out)
        return out
    
class DepthwiseSeparableConv1d(nn.Module):
    def __init__(self, cin, cout, kernel_size=3, padding=1, bias=True):
        super(DepthwiseSeparableConv1d, self).__init__()
        self.depthwise = nn.Conv1d(cin, cin, kernel_size=kernel_size, padding=padding, groups=cin, bias=bias)
        self.pointwise = nn.Conv1d(cin, cout, kernel_size=1, bias=bias)

    def forward(self, x):
        out = self.depthwise(x)
        out = self.pointwise(out)
        return out